### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.TicketDatabase
  commentId: T:TicketSystem.DatabaseRepository.TicketDatabase
  id: TicketDatabase
  parent: TicketSystem.DatabaseRepository
  children:
  - TicketSystem.DatabaseRepository.TicketDatabase.EventAdd(System.String,System.String)
  - TicketSystem.DatabaseRepository.TicketDatabase.EventGet
  - TicketSystem.DatabaseRepository.TicketDatabase.EventRemove(System.Int32)
  - TicketSystem.DatabaseRepository.TicketDatabase.EventSelect(System.Int32)
  - TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd(TicketModel.Venue)
  - TicketSystem.DatabaseRepository.TicketDatabase.VenueGet
  - TicketSystem.DatabaseRepository.TicketDatabase.VenueRemove(System.Int32)
  - TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind(System.String)
  langs:
  - csharp
  - vb
  name: TicketDatabase
  nameWithType: TicketDatabase
  fullName: TicketSystem.DatabaseRepository.TicketDatabase
  type: Class
  source:
    id: TicketDatabase
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 10
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  syntax:
    content: 'public class TicketDatabase : ITicketDatabase'
    content.vb: >-
      Public Class TicketDatabase

          Implements ITicketDatabase
  inheritance:
  - System.Object
  implements:
  - TicketSystem.DatabaseRepository.ITicketDatabase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd(System.String,System.String)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.EventAdd(System.String,System.String)
  id: EventAdd(System.String,System.String)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: EventAdd(String, String)
  nameWithType: TicketDatabase.EventAdd(String, String)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd(System.String, System.String)
  type: Method
  source:
    id: EventAdd
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 16
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  example: []
  syntax:
    content: public TicketEvent EventAdd(string name, string description)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    return:
      type: TicketModel.TicketEvent
    content.vb: Public Function EventAdd(name As String, description As String) As TicketEvent
  overload: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd*
  implements:
  - TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventRemove(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.EventRemove(System.Int32)
  id: EventRemove(System.Int32)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: EventRemove(Int32)
  nameWithType: TicketDatabase.EventRemove(Int32)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventRemove(System.Int32)
  type: Method
  source:
    id: EventRemove
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 29
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  example: []
  syntax:
    content: public void EventRemove(int ID)
    parameters:
    - id: ID
      type: System.Int32
    content.vb: Public Sub EventRemove(ID As Integer)
  overload: TicketSystem.DatabaseRepository.TicketDatabase.EventRemove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd(TicketModel.Venue)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd(TicketModel.Venue)
  id: VenueAdd(TicketModel.Venue)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: VenueAdd(Venue)
  nameWithType: TicketDatabase.VenueAdd(Venue)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd(TicketModel.Venue)
  type: Method
  source:
    id: VenueAdd
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 38
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  example: []
  syntax:
    content: public Venue VenueAdd(Venue venue)
    parameters:
    - id: venue
      type: TicketModel.Venue
    return:
      type: TicketModel.Venue
    content.vb: Public Function VenueAdd(venue As Venue) As Venue
  overload: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd*
  implements:
  - TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenueRemove(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.VenueRemove(System.Int32)
  id: VenueRemove(System.Int32)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: VenueRemove(Int32)
  nameWithType: TicketDatabase.VenueRemove(Int32)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenueRemove(System.Int32)
  type: Method
  source:
    id: VenueRemove
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 50
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  example: []
  syntax:
    content: public void VenueRemove(int Id)
    parameters:
    - id: Id
      type: System.Int32
    content.vb: Public Sub VenueRemove(Id As Integer)
  overload: TicketSystem.DatabaseRepository.TicketDatabase.VenueRemove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind(System.String)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind(System.String)
  id: VenuesFind(System.String)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: VenuesFind(String)
  nameWithType: TicketDatabase.VenuesFind(String)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind(System.String)
  type: Method
  source:
    id: VenuesFind
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 62
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  example: []
  syntax:
    content: public List<Venue> VenuesFind(string query)
    parameters:
    - id: query
      type: System.String
    return:
      type: System.Collections.Generic.List{TicketModel.Venue}
    content.vb: Public Function VenuesFind(query As String) As List(Of Venue)
  overload: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventSelect(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.EventSelect(System.Int32)
  id: EventSelect(System.Int32)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: EventSelect(Int32)
  nameWithType: TicketDatabase.EventSelect(Int32)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventSelect(System.Int32)
  type: Method
  source:
    id: EventSelect
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 72
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  example: []
  syntax:
    content: public List<TicketEvent> EventSelect(int Id)
    parameters:
    - id: Id
      type: System.Int32
    return:
      type: System.Collections.Generic.List{TicketModel.TicketEvent}
    content.vb: Public Function EventSelect(Id As Integer) As List(Of TicketEvent)
  overload: TicketSystem.DatabaseRepository.TicketDatabase.EventSelect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventGet
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.EventGet
  id: EventGet
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: EventGet()
  nameWithType: TicketDatabase.EventGet()
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventGet()
  type: Method
  source:
    id: EventGet
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 82
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  example: []
  syntax:
    content: public List<TicketEvent> EventGet()
    return:
      type: System.Collections.Generic.List{TicketModel.TicketEvent}
    content.vb: Public Function EventGet As List(Of TicketEvent)
  overload: TicketSystem.DatabaseRepository.TicketDatabase.EventGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenueGet
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.VenueGet
  id: VenueGet
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: VenueGet()
  nameWithType: TicketDatabase.VenueGet()
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenueGet()
  type: Method
  source:
    id: VenueGet
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\TicketDatabase.cs
    startLine: 92
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  example: []
  syntax:
    content: public List<Venue> VenueGet()
    return:
      type: System.Collections.Generic.List{TicketModel.Venue}
    content.vb: Public Function VenueGet As List(Of Venue)
  overload: TicketSystem.DatabaseRepository.TicketDatabase.VenueGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.DatabaseRepository
  commentId: N:TicketSystem.DatabaseRepository
  isExternal: false
  name: TicketSystem.DatabaseRepository
  nameWithType: TicketSystem.DatabaseRepository
  fullName: TicketSystem.DatabaseRepository
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TicketSystem.DatabaseRepository.ITicketDatabase
  commentId: T:TicketSystem.DatabaseRepository.ITicketDatabase
  parent: TicketSystem.DatabaseRepository
  isExternal: false
  name: ITicketDatabase
  nameWithType: ITicketDatabase
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.EventAdd
  isExternal: false
  name: EventAdd
  nameWithType: TicketDatabase.EventAdd
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  isExternal: true
  name: EventAdd(String, String)
  nameWithType: ITicketDatabase.EventAdd(String, String)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String, System.String)
  spec.csharp:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
    name: EventAdd
    nameWithType: ITicketDatabase.EventAdd
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
    name: EventAdd
    nameWithType: ITicketDatabase.EventAdd
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketModel.TicketEvent
  commentId: T:TicketModel.TicketEvent
  parent: TicketModel
  isExternal: false
  name: TicketEvent
  nameWithType: TicketEvent
  fullName: TicketModel.TicketEvent
- uid: TicketModel
  commentId: N:TicketModel
  isExternal: false
  name: TicketModel
  nameWithType: TicketModel
  fullName: TicketModel
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventRemove*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.EventRemove
  isExternal: false
  name: EventRemove
  nameWithType: TicketDatabase.EventRemove
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventRemove
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd
  isExternal: false
  name: VenueAdd
  nameWithType: TicketDatabase.VenueAdd
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  isExternal: false
  name: VenueAdd(Venue)
  nameWithType: ITicketDatabase.VenueAdd(Venue)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
  spec.csharp:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
    name: VenueAdd
    nameWithType: ITicketDatabase.VenueAdd
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketModel.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketModel.Venue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
    name: VenueAdd
    nameWithType: ITicketDatabase.VenueAdd
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketModel.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketModel.Venue
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketModel.Venue
  commentId: T:TicketModel.Venue
  parent: TicketModel
  isExternal: false
  name: Venue
  nameWithType: Venue
  fullName: TicketModel.Venue
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenueRemove*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.VenueRemove
  isExternal: false
  name: VenueRemove
  nameWithType: TicketDatabase.VenueRemove
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenueRemove
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind
  isExternal: false
  name: VenuesFind
  nameWithType: TicketDatabase.VenuesFind
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind
- uid: System.Collections.Generic.List{TicketModel.Venue}
  commentId: T:System.Collections.Generic.List{TicketModel.Venue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Venue>
  nameWithType: List<Venue>
  fullName: System.Collections.Generic.List<TicketModel.Venue>
  nameWithType.vb: List(Of Venue)
  fullName.vb: System.Collections.Generic.List(Of TicketModel.Venue)
  name.vb: List(Of Venue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketModel.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketModel.Venue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketModel.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketModel.Venue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventSelect*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.EventSelect
  isExternal: false
  name: EventSelect
  nameWithType: TicketDatabase.EventSelect
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventSelect
- uid: System.Collections.Generic.List{TicketModel.TicketEvent}
  commentId: T:System.Collections.Generic.List{TicketModel.TicketEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TicketEvent>
  nameWithType: List<TicketEvent>
  fullName: System.Collections.Generic.List<TicketModel.TicketEvent>
  nameWithType.vb: List(Of TicketEvent)
  fullName.vb: System.Collections.Generic.List(Of TicketModel.TicketEvent)
  name.vb: List(Of TicketEvent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketModel.TicketEvent
    name: TicketEvent
    nameWithType: TicketEvent
    fullName: TicketModel.TicketEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketModel.TicketEvent
    name: TicketEvent
    nameWithType: TicketEvent
    fullName: TicketModel.TicketEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventGet*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.EventGet
  isExternal: false
  name: EventGet
  nameWithType: TicketDatabase.EventGet
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventGet
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenueGet*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.VenueGet
  isExternal: false
  name: VenueGet
  nameWithType: TicketDatabase.VenueGet
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenueGet
