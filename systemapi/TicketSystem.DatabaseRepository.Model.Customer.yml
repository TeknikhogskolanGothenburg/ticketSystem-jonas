### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.Model.Customer
  commentId: T:TicketSystem.DatabaseRepository.Model.Customer
  id: Customer
  parent: TicketSystem.DatabaseRepository.Model
  children:
  - TicketSystem.DatabaseRepository.Model.Customer.Age
  - TicketSystem.DatabaseRepository.Model.Customer.EMail
  - TicketSystem.DatabaseRepository.Model.Customer.FirstName
  - TicketSystem.DatabaseRepository.Model.Customer.Phone
  langs:
  - csharp
  - vb
  name: Customer
  nameWithType: Customer
  fullName: TicketSystem.DatabaseRepository.Model.Customer
  type: Class
  source:
    id: Customer
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\Model\Customer.cs
    startLine: 6
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public class Customer
    content.vb: Public Class Customer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.DatabaseRepository.Model.Customer.FirstName
  commentId: P:TicketSystem.DatabaseRepository.Model.Customer.FirstName
  id: FirstName
  parent: TicketSystem.DatabaseRepository.Model.Customer
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: Customer.FirstName
  fullName: TicketSystem.DatabaseRepository.Model.Customer.FirstName
  type: Property
  source:
    id: FirstName
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\Model\Customer.cs
    startLine: 8
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FirstName As String
  overload: TicketSystem.DatabaseRepository.Model.Customer.FirstName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.Customer.Age
  commentId: P:TicketSystem.DatabaseRepository.Model.Customer.Age
  id: Age
  parent: TicketSystem.DatabaseRepository.Model.Customer
  langs:
  - csharp
  - vb
  name: Age
  nameWithType: Customer.Age
  fullName: TicketSystem.DatabaseRepository.Model.Customer.Age
  type: Property
  source:
    id: Age
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\Model\Customer.cs
    startLine: 9
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public int Age { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Age As Integer
  overload: TicketSystem.DatabaseRepository.Model.Customer.Age*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.Customer.EMail
  commentId: P:TicketSystem.DatabaseRepository.Model.Customer.EMail
  id: EMail
  parent: TicketSystem.DatabaseRepository.Model.Customer
  langs:
  - csharp
  - vb
  name: EMail
  nameWithType: Customer.EMail
  fullName: TicketSystem.DatabaseRepository.Model.Customer.EMail
  type: Property
  source:
    id: EMail
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\Model\Customer.cs
    startLine: 10
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string EMail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EMail As String
  overload: TicketSystem.DatabaseRepository.Model.Customer.EMail*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.Customer.Phone
  commentId: P:TicketSystem.DatabaseRepository.Model.Customer.Phone
  id: Phone
  parent: TicketSystem.DatabaseRepository.Model.Customer
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: Customer.Phone
  fullName: TicketSystem.DatabaseRepository.Model.Customer.Phone
  type: Property
  source:
    id: Phone
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\Model\Customer.cs
    startLine: 11
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public double Phone { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Phone As Double
  overload: TicketSystem.DatabaseRepository.Model.Customer.Phone*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.DatabaseRepository.Model
  commentId: N:TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketSystem.DatabaseRepository.Model
  nameWithType: TicketSystem.DatabaseRepository.Model
  fullName: TicketSystem.DatabaseRepository.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.DatabaseRepository.Model.Customer.FirstName*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Customer.FirstName
  isExternal: false
  name: FirstName
  nameWithType: Customer.FirstName
  fullName: TicketSystem.DatabaseRepository.Model.Customer.FirstName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.DatabaseRepository.Model.Customer.Age*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Customer.Age
  isExternal: false
  name: Age
  nameWithType: Customer.Age
  fullName: TicketSystem.DatabaseRepository.Model.Customer.Age
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketSystem.DatabaseRepository.Model.Customer.EMail*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Customer.EMail
  isExternal: false
  name: EMail
  nameWithType: Customer.EMail
  fullName: TicketSystem.DatabaseRepository.Model.Customer.EMail
- uid: TicketSystem.DatabaseRepository.Model.Customer.Phone*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Customer.Phone
  isExternal: false
  name: Phone
  nameWithType: Customer.Phone
  fullName: TicketSystem.DatabaseRepository.Model.Customer.Phone
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
