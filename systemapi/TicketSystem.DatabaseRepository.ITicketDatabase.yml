### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.ITicketDatabase
  commentId: T:TicketSystem.DatabaseRepository.ITicketDatabase
  id: ITicketDatabase
  parent: TicketSystem.DatabaseRepository
  children:
  - TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  - TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
  langs:
  - csharp
  - vb
  name: ITicketDatabase
  nameWithType: ITicketDatabase
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase
  type: Interface
  source:
    id: ITicketDatabase
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\ITicketDatabase.cs
    startLine: 6
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  syntax:
    content: public interface ITicketDatabase
    content.vb: Public Interface ITicketDatabase
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  id: EventAdd(System.String,System.String)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  langs:
  - csharp
  - vb
  name: EventAdd(String, String)
  nameWithType: ITicketDatabase.EventAdd(String, String)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String, System.String)
  type: Method
  source:
    id: EventAdd
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\ITicketDatabase.cs
    startLine: 14
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  summary: "\nAdd a new Event to the database\n"
  example: []
  syntax:
    content: TicketEvent EventAdd(string name, string description)
    parameters:
    - id: name
      type: System.String
      description: Name of the event
    - id: description
      type: System.String
      description: A desription of the event, html markup of the event is allowed
    return:
      type: TicketModel.TicketEvent
      description: An object representing the newly created TicketEvent
    content.vb: Function EventAdd(name As String, description As String) As TicketEvent
  overload: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd*
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
  id: VenueAdd(TicketModel.Venue)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  langs:
  - csharp
  - vb
  name: VenueAdd(Venue)
  nameWithType: ITicketDatabase.VenueAdd(Venue)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(TicketModel.Venue)
  type: Method
  source:
    id: VenueAdd
    path: C:\Users\Jakob\Documents\GitHub\ticketSystem-jonas\src\DatabaseRepository\ITicketDatabase.cs
    startLine: 24
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  summary: "\nAdd a new venue to the database\n"
  example: []
  syntax:
    content: Venue VenueAdd(Venue venue)
    parameters:
    - id: venue
      type: TicketModel.Venue
    return:
      type: TicketModel.Venue
      description: An object representing the newly created Venue
    content.vb: Function VenueAdd(venue As Venue) As Venue
  overload: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd*
references:
- uid: TicketSystem.DatabaseRepository
  commentId: N:TicketSystem.DatabaseRepository
  isExternal: false
  name: TicketSystem.DatabaseRepository
  nameWithType: TicketSystem.DatabaseRepository
  fullName: TicketSystem.DatabaseRepository
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd*
  commentId: Overload:TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd
  isExternal: false
  name: EventAdd
  nameWithType: ITicketDatabase.EventAdd
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketModel.TicketEvent
  commentId: T:TicketModel.TicketEvent
  parent: TicketModel
  isExternal: false
  name: TicketEvent
  nameWithType: TicketEvent
  fullName: TicketModel.TicketEvent
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketModel
  commentId: N:TicketModel
  isExternal: false
  name: TicketModel
  nameWithType: TicketModel
  fullName: TicketModel
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd*
  commentId: Overload:TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd
  isExternal: false
  name: VenueAdd
  nameWithType: ITicketDatabase.VenueAdd
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd
- uid: TicketModel.Venue
  commentId: T:TicketModel.Venue
  parent: TicketModel
  isExternal: false
  name: Venue
  nameWithType: Venue
  fullName: TicketModel.Venue
